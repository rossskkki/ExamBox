{"version":3,"file":"js/598.c93e6b68.js","mappings":"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","sources":["webpack://fornt/./src/views/UploadQ.vue","webpack://fornt/./src/views/UploadQ.vue?fd5a"],"sourcesContent":["<template>\n  <div class=\"upload-question\">\n    <van-nav-bar \n      title=\"上传题目\" \n      left-text=\"返回\"\n      left-arrow\n      @click-left=\"goBack\"\n    />\n\n    <el-form\n      :model=\"questionForm\"\n      :rules=\"rules\"\n      ref=\"questionFormRef\"\n      label-width=\"120px\"\n      class=\"question-form\"\n    >\n      <!-- 题目内容 -->\n      <el-form-item label=\"题目内容\" prop=\"content\">\n        <el-input\n          v-model=\"questionForm.content\"\n          type=\"textarea\"\n          :rows=\"4\"\n          placeholder=\"请输入题目内容\"\n        />\n      </el-form-item>\n\n      <!-- 题目分类 -->\n      <el-form-item label=\"题目分类\" prop=\"categoryId\" class=\"category\">\n        <div class=\"category-selector\">\n          <el-select v-model=\"questionForm.categoryId\" placeholder=\"请选择分类\" class=\"category-select\">\n            <el-option\n              v-for=\"category in categories\"\n              :key=\"category.id\"\n              :label=\"category.name\"\n              :value=\"category.id\"\n            />\n          </el-select>\n          <el-button type=\"primary\" @click=\"showAddCategoryDialog\">\n            <el-icon><CirclePlus /></el-icon>\n          </el-button>\n        </div>\n      </el-form-item>\n\n      <!-- 题目类型 -->\n      <el-form-item label=\"题目类型\" prop=\"type\">\n        <el-select v-model=\"questionForm.type\" placeholder=\"请选择题目类型\">\n          <el-option label=\"单选题\" value=\"CHOICE\" />\n          <el-option label=\"判断题\" value=\"TRUE_FALSE\" />\n          <el-option label=\"填空题\" value=\"FILL_IN\" />\n          <el-option label=\"简答题\" value=\"ESSAY\" />\n        </el-select>\n      </el-form-item>\n\n      <!-- 选项列表 (仅选择题显示) -->\n      <el-form-item\n        v-if=\"questionForm.type === 'CHOICE'\"\n        label=\"选项列表\"\n        prop=\"options\"\n      >\n        <div class=\"options-container\">\n          <div\n            v-for=\"(option, index) in questionForm.options\"\n            :key=\"index\"\n            class=\"option-item\"\n          >\n            <el-input\n              v-model=\"questionForm.options[index]\"\n              :placeholder=\"`选项 ${String.fromCharCode(65 + index)}`\"\n              class=\"option-input\"\n            />\n            <el-button\n              type=\"danger\"\n              size=\"small\"\n              @click=\"removeOption(index)\"\n              :disabled=\"questionForm.options.length <= 2\"\n            >\n              删除\n            </el-button>\n          </div>\n          <el-button type=\"primary\" size=\"small\" @click=\"addOption\">\n            添加选项\n          </el-button>\n        </div>\n      </el-form-item>\n\n      <!-- 答案 -->\n      <el-form-item label=\"答案\" prop=\"answer\">\n        <!-- 单选题答案 -->\n        <el-select\n          v-if=\"questionForm.type === 'CHOICE'\"\n          v-model=\"questionForm.answer\"\n          placeholder=\"请选择正确答案\"\n        >\n          <el-option\n            v-for=\"(option, index) in questionForm.options\"\n            :key=\"index\"\n            :label=\"`${String.fromCharCode(65 + index)}. ${option}`\"\n            :value=\"String.fromCharCode(65 + index)\"\n          />\n        </el-select>\n\n        <!-- 判断题答案 -->\n        <el-radio-group v-else-if=\"questionForm.type === 'TRUE_FALSE'\" v-model=\"questionForm.answer\">\n          <el-radio label=\"正确\">正确</el-radio>\n          <el-radio label=\"错误\">错误</el-radio>\n        </el-radio-group>\n\n        <!-- 其他题型答案 -->\n        <el-input\n          v-else\n          v-model=\"questionForm.answer\"\n          type=\"textarea\"\n          :rows=\"3\"\n          placeholder=\"请输入答案\"\n        />\n      </el-form-item>\n\n      <!-- 提交按钮 -->\n      <el-form-item>\n        <el-button type=\"primary\" @click=\"submitForm\" :loading=\"loading\">\n          上传题目\n        </el-button>\n        <el-button @click=\"resetForm\">重置</el-button>\n      </el-form-item>\n    </el-form>\n\n    <!-- 添加分类对话框 -->\n    <el-dialog\n      v-model=\"addCategoryDialogVisible\"\n      title=\"添加分类\"\n      width=\"400px\"\n      :before-close=\"handleCloseAddDialog\"\n    >\n      <el-form\n        :model=\"categoryForm\"\n        :rules=\"categoryRules\"\n        ref=\"categoryFormRef\"\n        label-width=\"80px\"\n      >\n        <el-form-item label=\"分类名称\" prop=\"name\">\n          <el-input\n            v-model=\"categoryForm.name\"\n            placeholder=\"请输入分类名称\"\n            maxlength=\"50\"\n            show-word-limit\n          />\n        </el-form-item>\n      </el-form>\n\n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"handleCloseAddDialog\">取消</el-button>\n          <el-button type=\"primary\" @click=\"submitAddCategory\" :loading=\"addCategoryLoading\">\n            确定\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n  <!-- <van-button type=\"primary\" size=\"small\" block @click=\"goToUpload\">上传试卷</van-button> -->\n  <el-button id=\"upload-btn\" type=\"success\" @click=\"goToUpload\" size=\"large\" round>上传试卷</el-button>\n</template>\n\n<script>\nimport { getCategoryList, uploadQuestion, addCategory } from '@/api/exambase'\nimport { ElMessage } from 'element-plus'\nimport { CirclePlus } from '@element-plus/icons-vue'\n\nexport default {\n  name: 'UploadQuestion',\n  components: {\n    // ArrowLeft,\n    CirclePlus\n  },\n  data() {\n    return {\n      loading: false,\n      addCategoryLoading: false,\n      addCategoryDialogVisible: false,\n      categories: [],\n      multipleAnswers: [],\n      questionForm: {\n        content: '',\n        categoryId: null,\n        options: ['', ''],\n        type: '',\n        answer: ''\n      },\n      categoryForm: {\n        name: ''\n      },\n      rules: {\n        content: [\n          { required: true, message: '请输入题目内容', trigger: 'blur' }\n        ],\n        categoryId: [\n          { required: true, message: '请选择题目分类', trigger: 'change' }\n        ],\n        type: [\n          { required: true, message: '请选择题目类型', trigger: 'change' }\n        ],\n        options: [\n          {\n            validator: (rule, value, callback) => {\n              if (this.questionForm.type === 'CHOICE') {\n                if (!value || value.length < 2) {\n                  callback(new Error('至少需要2个选项'))\n                } else if (value.some(option => !option.trim())) {\n                  callback(new Error('选项内容不能为空'))\n                } else {\n                  callback()\n                }\n              } else {\n                callback()\n              }\n            },\n            trigger: 'blur'\n          }\n        ],\n        answer: [\n          { required: true, message: '请输入或选择答案', trigger: 'blur' }\n        ]\n      },\n      categoryRules: {\n        name: [\n          { required: true, message: '请输入分类名称', trigger: 'blur' },\n          { min: 1, max: 50, message: '分类名称长度在 1 到 50 个字符', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  watch: {\n    'questionForm.type'(newType) {\n      if (newType === 'CHOICE') {\n        if (this.questionForm.options.length === 0) {\n          this.questionForm.options = ['', '']\n        }\n      } else {\n        this.questionForm.options = []\n      }\n      this.questionForm.answer = ''\n      this.multipleAnswers = []\n    }\n  },\n  created() {\n    this.loadCategories()\n  },\n  methods: {\n    goToUpload() {\n      this.$router.push('/upload');\n    },\n\n    async loadCategories() {\n      try {\n        const response = await getCategoryList()\n        this.categories = response.data.data\n      } catch (error) {\n        ElMessage.error('加载分类列表失败')\n        console.error(error)\n      }\n    },\n\n    showAddCategoryDialog() {\n      this.addCategoryDialogVisible = true\n      this.categoryForm.name = ''\n    },\n\n    handleCloseAddDialog() {\n      this.addCategoryDialogVisible = false\n      this.$refs.categoryFormRef?.resetFields()\n    },\n\n    async submitAddCategory() {\n      try {\n        const valid = await this.$refs.categoryFormRef.validate()\n        if (!valid) return\n\n        this.addCategoryLoading = true\n\n        await addCategory(this.categoryForm)\n\n        ElMessage.success('分类添加成功')\n        this.handleCloseAddDialog()\n\n        // 重新加载分类列表\n        await this.loadCategories()\n\n        // 自动选择新添加的分类\n        const newCategory = this.categories.find(cat => cat.name === this.categoryForm.name)\n        if (newCategory) {\n          this.questionForm.categoryId = newCategory.id\n        }\n\n      } catch (error) {\n        ElMessage.error('分类添加失败')\n        console.error(error)\n      } finally {\n        this.addCategoryLoading = false\n      }\n    },\n\n    addOption() {\n      this.questionForm.options.push('')\n    },\n\n    removeOption(index) {\n      if (this.questionForm.options.length > 2) {\n        this.questionForm.options.splice(index, 1)\n      }\n    },\n\n    async submitForm() {\n      try {\n        const valid = await this.$refs.questionFormRef.validate()\n        if (!valid) return\n\n        this.loading = true\n\n        const submitData = {\n          ...this.questionForm,\n          options: this.questionForm.type === 'CHOICE'\n            ? this.questionForm.options.filter(option => option.trim())\n            : []\n        }\n\n        await uploadQuestion(submitData)\n        ElMessage.success('题目上传成功')\n        this.resetForm()\n      } catch (error) {\n        ElMessage.error('题目上传失败')\n        console.error(error)\n      } finally {\n        this.loading = false\n      }\n    },\n\n    resetForm() {\n      this.$refs.questionFormRef.resetFields()\n      this.questionForm = {\n        content: '',\n        categoryId: null,\n        options: ['', ''],\n        type: '',\n        answer: ''\n      }\n      this.multipleAnswers = []\n    },\n\n    goBack() {\n      // 使用路由返回上一页\n      if (this.$route.query.from) {\n        this.$router.push(this.$route.query.from)\n      } else {\n        this.$router.go(-1)\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n.upload-question {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\n.header {\n  display: flex;\n  align-items: center;\n  margin-bottom: 20px;\n  position: relative;\n}\n\n.back-button {\n  margin-right: 20px;\n}\n\n.question-form {\n  background: #fff;\n  padding: 20px;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  margin-top: 50px;\n}\n\n.category-selector {\n  display: flex;\n  gap: 10px;\n  align-items: center;\n}\n\n.category-select {\n  flex: 1;\n}\n\n.options-container {\n  width: 100%;\n}\n\n.option-item {\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.option-input {\n  flex: 1;\n  margin-right: 10px;\n}\n\nh2 {\n  flex: 1;\n  text-align: center;\n  margin: 0;\n  color: #333;\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 10px;\n}\n\n/* 使用 :deep() 深度选择器来覆盖 Element Plus 的样式 */\n:deep(.el-form-item__content) {\n  display: block !important;\n}\n\n/* 或者更具体的选择器 */\n.question-form :deep(.el-form-item__content) {\n  display: block !important;\n}\n\n/* 如果只想对特定的表单项生效，可以添加类名 */\n.category :deep(.el-form-item__content) {\n  display: block !important;\n}\n\n#upload-btn{\n  margin-left:60%\n}\n</style>\n","import { render } from \"./UploadQ.vue?vue&type=template&id=6654b8c8&scoped=true\"\nimport script from \"./UploadQ.vue?vue&type=script&lang=js\"\nexport * from \"./UploadQ.vue?vue&type=script&lang=js\"\n\nimport \"./UploadQ.vue?vue&type=style&index=0&id=6654b8c8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6654b8c8\"]])\n\nexport default __exports__"],"names":["class","_createElementVNode","_hoisted_1","_createVNode","_component_van_nav_bar","title","onClickLeft","$options","goBack","_component_el_form","model","$data","questionForm","rules","ref","_component_el_form_item","label","prop","_component_el_input","content","$event","type","rows","placeholder","_hoisted_2","_component_el_select","categoryId","_createElementBlock","_Fragment","_renderList","categories","category","_createBlock","_component_el_option","key","id","name","value","_component_el_button","onClick","showAddCategoryDialog","_component_el_icon","_component_CirclePlus","_hoisted_3","options","option","index","String","fromCharCode","size","removeOption","disabled","length","_cache","addOption","answer","_component_el_radio_group","_component_el_radio","submitForm","loading","resetForm","_component_el_dialog","addCategoryDialogVisible","width","handleCloseAddDialog","footer","_withCtx","_hoisted_4","submitAddCategory","addCategoryLoading","categoryForm","categoryRules","maxlength","goToUpload","round","components","CirclePlus","data","multipleAnswers","required","message","trigger","validator","rule","callback","this","Error","some","trim","min","max","watch","newType","created","loadCategories","methods","$router","push","response","getCategoryList","error","ElMessage","console","$refs","categoryFormRef","resetFields","valid","validate","addCategory","success","newCategory","find","cat","splice","questionFormRef","submitData","filter","uploadQuestion","$route","query","from","go","__exports__","render"],"sourceRoot":""}